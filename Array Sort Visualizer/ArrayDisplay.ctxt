#BlueJ class context
comment0.target=ArrayDisplay
comment0.text=\r\n\ An\ ArrayDisplay\ object\ can\ show\ arrays\ in\ the\ world\ by\ displaying\ all\ \r\n\ array\ Elements\ lined\ up\ in\ order.\ At\ every\ act\ step,\ if\ the\ content\ of\ the\r\n\ array\ has\ changed,\ the\ change\ will\ be\ visualised\ by\ the\ ArrayDisplay\ object.\r\n\ \r\n\ If\ the\ act\ loop\ is\ not\ used\ while\ modifying\ the\ array,\ but\ visualisation\ is\r\n\ still\ desired,the\ update()\ method\ can\ be\ called\ explicitly\ to\ trigger\ a\ visual\r\n\ update\ of\ the\ array\ state\ on\ screen.\r\n
comment1.params=array
comment1.target=ArrayDisplay(greenfoot.Actor[])
comment1.text=\r\n\ Create\ an\ array\ display\ with\ a\ given\ array\ to\ be\ displayed.\ The\ array\r\n\ must\ not\ be\ null.\r\n
comment10.params=elem\ array
comment10.target=int\ pos(greenfoot.Actor,\ greenfoot.Actor[])
comment10.text=\r\n\ Return\ the\ position\ of\ a\ given\ element\ in\ an\ array.\ Return\ -1\ if\ the\ element\r\n\ is\ not\ in\ the\ array.\r\n
comment11.params=index
comment11.target=int\ screenPos(int)
comment11.text=\r\n\ For\ a\ given\ array\ index,\ return\ the\ screen\ position\ (x\ coordinate).\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Update\ (animate)\ the\ view\ to\ reflect\ the\ current\ state\ of\ the\ array.\r\n
comment3.params=world
comment3.target=void\ addedToWorld(greenfoot.World)
comment3.text=\ \r\n\ When\ we're\ in\ the\ world,\ show\ ourselves.\r\n
comment4.params=
comment4.target=void\ update()
comment4.text=\r\n\ Work\ out\ the\ animations\ to\ be\ done\ (by\ comparing\ the\ current\ array\ values\r\n\ to\ the\ previous\ state),\ and\ then\ do\ them.\r\n
comment5.params=
comment5.target=void\ animate()
comment5.text=\r\n\ Animate\ the\ current\ changes.\r\n
comment6.params=
comment6.target=void\ createAnimations()
comment6.text=\r\n\ Create\ a\ list\ with\ all\ necessary\ animators\ for\ this\ step.\r\n
comment7.params=
comment7.target=void\ show()
comment7.text=\r\n\ Show\ the\ array\ that\ is\ to\ be\ displayed\ on\ screen.\r\n
comment8.params=array
comment8.target=java.awt.Dimension\ maxSize(greenfoot.Actor[])
comment8.text=\r\n\ Return\ the\ maximum\ image\ dimensions\ of\ any\ of\ the\ actors\ in\ the\ array.\r\n
comment9.params=gridSize
comment9.target=void\ createImage(java.awt.Dimension)
comment9.text=\r\n\ Create\ the\ image\ for\ this\ array\ display\ object.\r\n
numComments=12
