#BlueJ class context
comment0.target=ArrayVisualization
comment0.text=\r\n\ An\ array\ sorting\ demo\ class.\ This\ class\ can\ show\ an\ array\ of\ some\ elements,\ and\ \r\n\ implements\ a\ sort\ method.\ The\ sorting\ method\ (and,\ in\ fact,\ the\ array\ creation)\r\n\ can\ be\ called\ interactively\ (by\ right-clicking\ on\ the\ world\ background)\ or\ by\r\n\ running\ this\ scenario.\ Original\ version\ by\ Michael\ Kolling.\r\n\ \r\n\ @author\ A\ Pittman\r\n\ @version\ March,\ 2021\r\n
comment1.params=
comment1.target=ArrayVisualization()
comment1.text=\r\n\ Create\ the\ demo\ world.\r\n
comment10.params=i1\ i2
comment10.target=void\ swap(int,\ int)
comment10.text=\r\n\ Swap\ the\ array\ elements\ at\ positions\ i1\ and\ i2.\r\n
comment2.params=
comment2.target=void\ makeBarArray()
comment2.text=\r\n\ Create\ and\ show\ an\ array\ made\ up\ of\ bars.\ The\ values\ in\ the\ array\ are\ random.\r\n\ This\ method\ can\ be\ called\ from\ this\ class's\ constructor,\ or\ interactively\ \r\n\ (by\ right-clicking\ in\ the\ world\ background).\r\n
comment3.params=
comment3.target=void\ makeAnimalArray()
comment3.text=\r\n\ Create\ and\ show\ an\ array\ of\ some\ animals\ (randomly\ shuffled).\ This\ method\ can\ be\ \r\n\ called\ from\ this\ class's\ constructor,\ or\ interactively\ (by\ right-clicking\ in\ the\ \r\n\ world\ background).\r\n\ Animals\ are\ created\ with\ a\ given\ value\ for\ their\ weight\ -\ this\ is\ the\ criterion\r\n\ by\ which\ theu\ will\ be\ sorted.\r\n
comment4.params=
comment4.target=void\ bubbleSort()
comment4.text=\r\n\ Performs\ a\ bubble\ sort\ on\ the\ array\ in\ the\ display.\ If\ you\ want\ to\r\n\ animate\ algorithms\ like\ this\ (without\ the\ act\ loop),\ it\ is\ important\r\n\ to\ call\ display.update()\ in\ the\ inner\ loop\ to\ trigger\ the\ array\ \r\n\ update\ animation\ on\ screen.\r\n
comment5.params=
comment5.target=void\ selectionSort()
comment6.params=
comment6.target=void\ insertionSort()
comment7.params=
comment7.target=void\ mergeSort()
comment7.text=\r\n\ \ \ \ public\ static\ void\ mergeSort(int[]\ elements)\r\n\ \ \ {\r\n\ \ \ \ \ \ int\ n\ \=\ elements.length;\r\n\ \ \ \ \ \ int[]\ temp\ \=\ new\ int[n];\r\n\ \ \ \ \ \ mergeSortHelper(a,\ 0,\ n\ -\ 1,\ temp);\r\n\ \ \ }\r\n\r\n\ \ \ private\ void\ mergeSortHelper(int[]\ elements,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ from,\ int\ to)\r\n\ \ \ {\r\n\ \ \ \ \ \ \ if\ (0\ <\ a.length\ -\ 1)\r\n\ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ int\ middle\ \=\ (from\ +\ to)\ /\ 2;\r\n\ \ \ \ \ \ \ \ \ \ mergeSortHelper(a,\ 0,\ a.length/2,\ temp);\r\n\ \ \ \ \ \ \ \ \ \ mergeSortHelper(a,\ a.length/2\ +\ 1,\ a.length\ -\ 1,\ temp);\r\n\ \ \ \ \ \ \ \ \ \ merge(a,\ 0,\ a.length\ /\ 2,\ a.length\ -1\ ,\ temp);\r\n\ \ \ \ \ \ \ }\r\n\ \ \ }\r\n\r\n\ \ \ public\ void\ merge(int[]\ elements,\ int\ from,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ mid,\ int\ to)\r\n\ \ \ {\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ int\ i\ \=\ 0;\r\n\ \ \ \ \ \ int\ j\ \=\ a.length\ /\ 2\ +\ 1;\r\n\ \ \ \ \ \ int\ k\ \=\ 0;\r\n\r\n\ \ \ \ \ \ while\ (i\ <\=\ a.length\ /\ 2\ &&\ j\ <\=\ a.length\ -\ 1)\r\n\ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ if\ (a[i].getValue()\ <\ a[j].getValue())\r\n\ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ temp[k]\ \=\ a[i].getValue();\r\n\ \ \ \ \ \ \ \ \ \ \ \ i++;\r\n\ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ else\r\n\ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ temp[k]\ \=\ a[j].getValue();\r\n\ \ \ \ \ \ \ \ \ \ \ \ j++;\r\n\ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ k++;\r\n\ \ \ \ \ \ }\r\n\r\n\ \ \ \ \ \ while\ (i\ <\=\ a.length\ /\ 2)\r\n\ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ temp[k]\ \=\ a[i].getValue();\r\n\ \ \ \ \ \ \ \ \ i++;\r\n\ \ \ \ \ \ \ \ \ k++;\r\n\ \ \ \ \ \ }\r\n\r\n\ \ \ \ \ \ while\ (j\ <\=\ to)\r\n\ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ temp[k]\ \=\ a[j].getValue();\r\n\ \ \ \ \ \ \ \ \ j++;\r\n\ \ \ \ \ \ \ \ \ k++;\r\n\ \ \ \ \ \ }\r\n\r\n\ \ \ \ \ \ for\ (k\ \=\ from;\ k\ <\=\ to;\ k++)\r\n\ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ a[k].setValue(temp[k]);\r\n\ \ \ \ \ \ }\r\n\ \ \ }\r\n
comment8.params=elements\ from\ to\ temp
comment8.target=void\ mergeSortHelper(Element[],\ int,\ int,\ Element[])
comment9.params=elements\ from\ mid\ to\ temp
comment9.target=void\ merge(Element[],\ int,\ int,\ int,\ Element[])
numComments=11
